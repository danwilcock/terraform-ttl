name: Build + Release

on: 
  workflow_dispatch:
    inputs:
      expiry:
        type: boolean
        description: Expire environment
      expiry_date:
        type: string
        description: Date of the destroy
        default: "yyyy-mm-ddThh:mm:ss"
      destroy:
        type: boolean
        description: Destroy the environment
        default: false
  # push:
  #   branches:
  #     - main

jobs:
  Terraform_Plan:
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Branch
        uses: actions/checkout@v3
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          creds: '{"clientId":"${{ secrets.AZURE_AD_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_AD_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_AD_TENANT_ID }}"}'
      - uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: "gh-actions" 
          secrets: 'gh-actions-storage-account-key'
        id: sa_states 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.8
      
      - name: Init
        id: init
        working-directory: ./terraform
        run: | 
          terraform init \
            -backend-config="access_key=${{steps.sa_states.outputs.gh-actions-storage-account-key}}" \
            -backend-config="storage_account_name=ghactionsstates" \
            -backend-config="container_name=tfstates" \
            -backend-config="key=expiry.terraform.tfstate" 
      - name: Plan
        id: plan
        if: github.event.inputs.destroy == 'false'
        working-directory: ./terraform
        run: | 
          terraform plan  
      - name: Apply
        id: apply
        if: github.event.inputs.destroy == 'false'
        working-directory: ./terraform
        run: | 
          terraform apply -auto-approve 
      - name: Destroy Plan
        id: destroy_plan
        if: github.event.inputs.destroy == 'true'
        working-directory: ./terraform
        run: | 
          terraform apply -auto-approve --destroy 
      - name: Destroy 
        id: destroy
        if: github.event.inputs.destroy == 'true'
        working-directory: ./terraform
        run: | 
          terraform apply -auto-approve --destroy 
      
      

